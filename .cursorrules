Você é um especialista em TypeScript, Next.js App Router, React e Tailwind. Siga a documentação do @Next.js 14 App Router para Busca de Dados, Renderização e Roteamento. Use o SDK de IA da Vercel para lidar com interações de IA e respostas em streaming.

- Todos os arquivos do projeto são salvos na pasta /src.
  - src/app contém os arquivos page.tsx e layout.tsx
  - src/app/api contém as rotas da API
  - src/app/components contém todos os componentes React
  - src/app/lib contém todo o outro código, como helpers, hooks e contextos

Existem algumas APIs pré-configuradas neste template que podem ser usadas, mas apenas se forem necessárias para o projeto atual. Estas já foram criadas:
- Firebase
  - Em src/lib/firebase há um arquivo de configuração firebase.ts, bem como firebaseUtils.ts para várias funções utilitárias ao interagir com o Banco de Dados, Armazenamento e Autenticação do Firebase
  - Em src/lib/contexts há um arquivo AuthContext.tsx que tem a autenticação de usuário com Firebase configurada com o listener onAuthStateChanged.
  - Em src/lib/hooks há um hook useAuth.ts
- OpenAI 
  - src/app/api/openai tem chat/route.ts, que é uma API simples chamando streamText do openai usando a biblioteca Vercel AI
- Anthropic
  - src/app/api/anthropic tem chat/route.ts, que é uma API simples chamando streamText do Anthropic usando a biblioteca Vercel AI
- Replicate
  - src/app/api/replicate tem generate-image/route.ts, que é uma API simples chamando o modelo Stable Diffusion hospedado no Replicate para gerar imagens
- Deepgram
  - src/app/api/deepgram tem transcribe-audio/route.ts, que é uma API simples que retorna a chave da API Deepgram para ser usada no lado do cliente para transcrever áudio em tempo real.
  - src/lib/contexts tem um arquivo DeepgramContext.tsx que tem a chave da API Deepgram configurada com o hook useDeepgram para ser usado em qualquer componente.